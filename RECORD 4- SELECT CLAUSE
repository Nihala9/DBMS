a) ACCESSING DATABASE:  (SELECT, Filtering using WHERE, ORDER BY Clauses)

1.    List all invoice items, avoid duplicates.
  
mysql> SELECT DISTINCT quantity FROM Invoice_item;
+----------+
| quantity |
+----------+
|        5 |
|        3 |
|        4 |
+----------+
3 rows in set (0.01 sec)


2.    List the invoice details from 1st January 2024 to 31st march 2024

mysql> SELECT * FROM Invoice_master WHERE inv_date BETWEEN '2024-01-01' AND '2024-03-31';
+--------+---------+------------+
| inv_id | cust_id | inv_date   |
+--------+---------+------------+
|    101 |   10001 | 2024-03-10 |
|    102 |   10002 | 2024-03-11 |
|    103 |   10003 | 2024-03-12 |
+--------+---------+------------+
3 rows in set (0.01 sec)


3.    List the customer details who not live in ‘tvm’.

mysql> SELECT * FROM Customer WHERE city!='Tvm';
+-------+--------+------------+------+------------+
| id    | name   | address    | city | ph_no      |
+-------+--------+------------+------+------------+
| 10001 | Rahul  | 123 Street | Clt  | NULL       |
| 10002 | Aisha  | 456 Avenue | Ekm  | 9876543210 |
| 10004 | Neha   | 101 Main   | Knr  | 9988776655 |
| 10005 | Suresh | 202 Market | Ktym | 9845612345 |
+-------+--------+------------+------+------------+
4 rows in set (0.00 sec)


4.    List the customers who have no phone number.

mysql> SELECT * FROM Customer WHERE ph_no IS NULL;
+-------+--------+------------+------+-------+
| id    | name   | address    | city | ph_no |
+-------+--------+------------+------+-------+
| 10001 | Rahul  | 123 Street | Clt  | NULL  |
| 10003 | Vikram | 789 Road   | Tvm  | NULL  |
+-------+--------+------------+------+-------+
2 rows in set (0.01 sec)


5.    Display customer names in descending order.

mysql> SELECT name FROM Customer ORDER BY name DESC;
+--------+
| name   |
+--------+
| Vikram |
| Suresh |
| Rahul  |
| Neha   |
| Aisha  |
+--------+
5 rows in set (0.00 sec)


6.    Display the customer details sorted in ascending by city and descending by names.

mysql> SELECT * FROM Customer ORDER BY city ASC, name DESC;
+-------+--------+------------+------+------------+
| id    | name   | address    | city | ph_no      |
+-------+--------+------------+------+------------+
| 10001 | Rahul  | 123 Street | Clt  | NULL       |
| 10002 | Aisha  | 456 Avenue | Ekm  | 9876543210 |
| 10004 | Neha   | 101 Main   | Knr  | 9988776655 |
| 10005 | Suresh | 202 Market | Ktym | 9845612345 |
| 10003 | Vikram | 789 Road   | Tvm  | NULL       |
+-------+--------+------------+------+------------+
5 rows in set (0.00 sec)


7.    Find the customer names who have ‘e’ or ‘a’ in them and at least 3 characters in length

mysql> SELECT name FROM Customer WHERE (name LIKE '%e%'  OR name LIKE '%a%') AND LENGTH(name) >= 3;
+--------+
| name   |
+--------+
| Rahul  |
| Aisha  |
| Vikram |
| Neha   |
| Suresh |
+--------+
5 rows in set (0.00 sec)


8.    List the names of customers their names have ‘i’ in second position.

mysql> SELECT name FROM Customer WHERE name LIKE '%i%';
+--------+
| name   |
+--------+
| Aisha  |
| Vikram |
+--------+
2 rows in set (0.00 sec)

***************************************************************************************************************************

b) OPTIMIZING DATABASE:  (GROUP BY, AGGREGATE FUNCTIONS)

1.    List product name, price except soap on price order.

mysql> SELECT pname,price FROM Product WHERE pname!='Soap' ORDER BY price;
+----------+--------+
| pname    | price  |
+----------+--------+
| Eraser   |  50.00 |
| Pencil   |  75.00 |
| Notebook |  80.00 |
| Pen      | 120.00 |
+----------+--------+
4 rows in set (0.00 sec)


2.    Find minimum, maximum and average price of products.

mysql> SELECT MIN(price) AS Min_Price,MAX(price) AS Max_Price,AVG(price) AS Avg_Price FROM Product;
+-----------+-----------+-----------+
| Min_Price | Max_Price | Avg_Price |
+-----------+-----------+-----------+
|     50.00 |    120.00 | 77.000000 |
+-----------+-----------+-----------+
1 row in set (0.00 sec)


3.    Find number of customers in each city.

mysql> SELECT city, COUNT(*) AS cust_count FROM Customer GROUP BY city;
+------+------------+
| city | cust_count |
+------+------------+
| Clt  |          1 |
| Ekm  |          1 |
| Tvm  |          1 |
| Knr  |          3 |
| Ktym |          1 |
+------+------------+
5 rows in set (0.01 sec)


4.    Find number of customers in each city, only include city with more than 2 customers.

mysql> SELECT city, COUNT(*) AS cust_count FROM Customer GROUP BY city HAVING COUNT(*) > 2;
+------+------------+
| city | cust_count |
+------+------------+
| Knr  |          3 |
+------+------------+
1 row in set (0.00 sec)


5. Show data as displayed ‘who, where’ Eg: ‘customer1 lives in ekm’

mysql> SELECT CONCAT(name,' lives in ',city)AS cust_info FROM Customer;
+----------------------+
| cust_info            |
+----------------------+
| Rahul lives in Clt   |
| Aisha lives in Ekm   |
| Vikram lives in Tvm  |
| Neha lives in Knr    |
| Suresh lives in Ktym |
| Meera lives in Knr   |
| Arya lives in Knr    |
+----------------------+
7 rows in set (0.00 sec)




